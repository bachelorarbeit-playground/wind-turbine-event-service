package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.26

import (
	"context"
	"gql-service/graph/model"
	"gql-service/http"
)

// AverageProduction is the resolver for the AverageProduction field.
func (r *queryResolver) AverageProduction(ctx context.Context) ([]*model.AverageProductionEntry, error) {
	result, err := http.GET[model.AverageProductionEntry]("http://localhost:1323", "/AverageProduction")
	if err != nil {
		return nil, err
	}

	return result, nil
}

// AnomalyDetection is the resolver for the AnomalyDetection field.
func (r *queryResolver) AnomalyDetection(ctx context.Context) ([]*model.AnomalyDetectionEntry, error) {
	result, err := http.GET[model.AnomalyDetectionEntry]("http://localhost:1323", "/AnomalyDetection")
	if err != nil {
		return nil, err
	}

	return result, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
